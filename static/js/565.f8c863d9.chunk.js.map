{"version":3,"file":"static/js/565.f8c863d9.chunk.js","mappings":"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","sources":["components/contentPagesComponents/ListField.styled.js","components/contentPagesComponents/ListField.jsx","pages/ConsultationPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledListField = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 124px;\n\n  p.title-list {\n    display: ${props => (props.name.psychotherapy ? 'none' : 'block')};\n    color: ${props =>\n      props.name.education ? 'inherit' : 'var(--primery-text)'};\n    font-family: ${props =>\n      props.name.satisfaction ? 'ProximaNova-500' : 'ProximaNova-600'};\n    font-weight: ${props => (props.name.satisfaction ? '500' : '600')};\n    font-size: ${props => (props.name.satisfaction ? '20px' : '18px')};\n    margin-bottom: ${props => (props.name.satisfaction ? '24px' : '16px')};\n    line-height: ${props => (props.name.satisfaction ? '1.2' : '1.33')};\n    letter-spacing: ${props =>\n      props.name.satisfaction ? '-0.2px' : '-0.18px'};\n  }\n\n  .accent-text {\n    color: var(--primery-text);\n  }\n  .accent-phrase {\n    font-family: 'ProximaNova-700';\n    font-weight: 700;\n  }\n\n  ul {\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n  }\n\n  li {\n    display: flex;\n    align-items: center;\n    gap: 12px;\n  }\n\n  div.icon-wrapper {\n    width: 6px;\n    height: 6px;\n    display: flex;\n    align-items: center;\n  }\n\n  svg.icon-marker {\n    width: 6px;\n    height: 6px;\n  }\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${props => (props.name.education ? '88px' : '0')};\n\n    ul {\n      max-width: ${props =>\n        props.name.education\n          ? '632px'\n          : props.name.consultation\n          ? '343px'\n          : '342px'};\n    }\n  }\n\n  @media screen and (min-width: 1440px) {\n    margin-bottom: 0;\n\n    ul {\n      max-width: ${props =>\n        props.name.education\n          ? '553px'\n          : props.name.consultation\n          ? '480px'\n          : '544px'};\n    }\n  }\n`;\n","import { nanoid } from 'nanoid';\n\nimport sprite from '../../assets/images/icons.svg';\nimport { StyledListField } from './ListField.styled.js';\nimport textContent from '../../data/pagesTextContent';\n\nexport default function ListField({ name }) {\n  const { titleList, dataList } = textContent.find(\n    item => name[item.path_page] === true\n  );\n\n  return (\n    <>\n      <StyledListField name={name}>\n        {titleList === 'create title' ? (\n          <p className=\"title-list\">\n            Якщо ви відчуваєте себе не впевненими при розмові з дітьми{' '}\n            <span className=\"accent-text\">“про це”</span>, пропоную вам:\n          </p>\n        ) : (\n          <p className=\"title-list\">{titleList}</p>\n        )}\n\n        <ul>\n          {dataList.map(item => {\n            if (item === 'create text')\n              return (\n                <li key={nanoid()}>\n                  <div className=\"icon-wrapper\">\n                    <svg className=\"icon-marker\" width=\"6px\" height=\"6px\">\n                      <use href={sprite + '#marker'}></use>\n                    </svg>\n                  </div>\n                  <p>\n                    або придбати запис вебінару для батьків дітей віком від 0 до\n                    16 років{' '}\n                    <span className=\"accent-phrase\">“Статеве виховання”</span>.\n                    Про що, як і коли говорити з дітьми “про це”, в якому\n                    півтори години чіткої, структурованої інформації про\n                    найголовніше (відповіді на більше ніж 30 найактуальніших\n                    питань) з прикладами, ілюстраціями та поясненням.\n                  </p>\n                </li>\n              );\n            return (\n              <li key={nanoid()}>\n                <div className=\"icon-wrapper\">\n                  <svg className=\"icon-marker\" width=\"6px\" height=\"6px\">\n                    <use href={sprite + '#marker'}></use>\n                  </svg>\n                </div>\n                {item}\n              </li>\n            );\n          })}\n        </ul>\n      </StyledListField>\n    </>\n  );\n}\n","import { useMediaQuery } from 'react-responsive';\nimport { useLocation } from 'react-router-dom';\nimport BreadCrumbs from 'components/BreadCrumbs/BreadCrumbs';\nimport Container from 'components/Container/Container';\nimport MainWrapperContent from 'components/ContentPageWrappers/MainWrapperContent';\nimport MediaThumb from 'components/MediaThumb/MediaThumb';\nimport TitlePages from 'components/TitlePages/TitlePages';\nimport LeftWrapperContent from 'components/ContentPageWrappers/LeftWrapperContent';\nimport RigthWrapperContent from 'components/ContentPageWrappers/RigthWrapperContent';\nimport DescriptionAccentPage from 'components/contentPagesComponents/DescriptionAccentPage';\nimport ListField from 'components/contentPagesComponents/ListField';\nimport ButtonApplication from 'components/ButtonApplication/ButtonApplication';\nimport PriceField from 'components/PriceField/PriceField';\nimport { confirmNamePage } from 'helpers/confirmNamePage';\nimport SliderSimple from 'components/Slider/SliderSimple';\nimport FeedbackWrapperContent from 'components/ContentPageWrappers/FeedbackWrapperContent';\n\nfunction ConsultationPage() {\n  const location = useLocation();\n  const isMobile = useMediaQuery({ query: '(max-width: 767.9px)' });\n  const isTablet = useMediaQuery({ query: '(min-width: 768px)' });\n\n  const namePage = confirmNamePage(location.pathname);\n  const titlePage = 'Консультація';\n\n  return (\n    <>\n      <section>\n        <Container>\n          <MainWrapperContent name={namePage}>\n            {isMobile && (\n              <>\n                <BreadCrumbs titlePage={titlePage} name={namePage} />\n                <TitlePages titlePage={titlePage} name={namePage} />\n                <MediaThumb name={namePage} />\n                <DescriptionAccentPage name={namePage} />\n                <ListField name={namePage} />\n                <FeedbackWrapperContent name={namePage}>\n                  <SliderSimple title=\"Відгуки\" name={namePage} />\n                </FeedbackWrapperContent>\n                <PriceField name={namePage} />\n              </>\n            )}\n            {isTablet && (\n              <>\n                <LeftWrapperContent name={namePage}>\n                  <BreadCrumbs titlePage={titlePage} name={namePage} />\n                  <TitlePages titlePage={titlePage} name={namePage} />\n                  <DescriptionAccentPage name={namePage} />\n                  <ListField name={namePage} />\n                </LeftWrapperContent>\n                <RigthWrapperContent name={namePage}>\n                  <MediaThumb name={namePage} />\n                  <PriceField name={namePage} />\n                </RigthWrapperContent>\n                <FeedbackWrapperContent name={namePage}>\n                  <SliderSimple title=\"Відгуки\" name={namePage} />\n                </FeedbackWrapperContent>\n              </>\n            )}\n\n            <ButtonApplication />\n          </MainWrapperContent>\n        </Container>\n      </section>\n    </>\n  );\n}\n\nexport default ConsultationPage;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["StyledListField","styled","props","name","psychotherapy","education","satisfaction","consultation","ListField","textContent","item","path_page","titleList","dataList","className","map","width","height","href","sprite","nanoid","location","useLocation","isMobile","useMediaQuery","query","isTablet","namePage","confirmNamePage","pathname","titlePage","title","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase"],"sourceRoot":""}